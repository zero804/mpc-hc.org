name: CI

on: [push, pull_request]

env:
  CI: true
  NODE: 12.x
  RUBY: 2.6.x

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE }}

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY }}

      - name: Disable gem docs
        run: 'echo "gem: --no-document" > ~/.gemrc'

      - name: Set up Ruby cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-ruby-v${{ env.RUBY }}-${{ hashFiles('Gemfile') }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby-v${{ env.RUBY }}-${{ hashFiles('Gemfile') }}-${{ hashFiles('Gemfile.lock') }}
            ${{ runner.os }}-ruby-v${{ env.RUBY }}-

      - name: Set up npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-v${{ env.NODE }}-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-v${{ env.NODE }}-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}
            ${{ runner.OS }}-node-v${{ env.NODE }}-

      - name: Set up Bundler
        run: gem install bundler -v "~> 1.17"

      - run: ruby --version
      - run: gem --version
      - run: bundle --version
      - run: java -version

      - name: Install npm dependencies
        run: npm ci

      - name: Install bundler dependencies
        run: bundle install --deployment --jobs=4 --retry=3 --clean

      - name: Run tests
        run: npm test
